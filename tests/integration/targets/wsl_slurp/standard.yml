---
# Standard tests for wsl_slurp module

- name: Test with check mode (should work the same as normal mode for read operations)
  block:
    - name: Read test file in check mode
      vanduc2514.wsl_automation.wsl_slurp:
        distribution: "{{ wsl_distribution }}"
        path: "/tmp/ansible_test/test_file.txt"
      check_mode: true
      register: check_mode_result

    - name: Validate check mode result
      assert:
        that:
          - check_mode_result is changed == false
          - check_mode_result.path == '/tmp/ansible_test/test_file.txt'
          - check_mode_result.encoding == 'base64'
          - check_mode_result.content | b64decode | trim == test_file_content

- name: Test with special characters in content
  block:
    - name: Create a file with special characters
      vanduc2514.wsl_automation.wsl_file:
        distribution: "{{ wsl_distribution }}"
        path: "/tmp/ansible_test/special_chars.txt"
        content: "Special characters: !@#$%^&*()_+-={}[]|\\:;\"'<>,./?\nUnicode: 你好, こんにちは, 안녕하세요"
        state: file
        mode: '644'

    - name: Read file with special characters
      vanduc2514.wsl_automation.wsl_slurp:
        distribution: "{{ wsl_distribution }}"
        path: "/tmp/ansible_test/special_chars.txt"
      register: special_chars_result

    - name: Create expected content variable
      set_fact:
        expected_special_content: "Special characters: !@#$%^&*()_+-={}[]|\\:;\"'<>,./?\nUnicode: 你好, こんにちは, 안녕하세요"

    - name: Validate special characters handling
      assert:
        that:
          - special_chars_result is changed == false
          - special_chars_result.content | b64decode | trim == expected_special_content

- name: Test with binary file
  block:
    - name: Create a binary file
      vanduc2514.wsl_automation.wsl_file:
        distribution: "{{ wsl_distribution }}"
        path: "/tmp/ansible_test/create_binary.sh"
        content: |
          #!/bin/bash
          dd if=/dev/urandom of=/tmp/ansible_test/binary_file.bin bs=1024 count=1
          chmod 644 /tmp/ansible_test/binary_file.bin
        state: file
        mode: '755'

    - name: Execute script to create binary file
      vanduc2514.wsl_automation.wsl_command:
        distribution: "{{ wsl_distribution }}"
        command: /tmp/ansible_test/create_binary.sh

    - name: Read binary file
      vanduc2514.wsl_automation.wsl_slurp:
        distribution: "{{ wsl_distribution }}"
        path: "/tmp/ansible_test/binary_file.bin"
      register: binary_result

    - name: Validate binary file reading
      assert:
        that:
          - binary_result is changed == false
          - binary_result.encoding == 'base64'
          - binary_result.content is string
          - binary_result.content | length > 0

- name: Cleanup test files
  vanduc2514.wsl_automation.wsl_file:
    distribution: "{{ wsl_distribution }}"
    path: "/tmp/ansible_test"
    state: absent
    force: true