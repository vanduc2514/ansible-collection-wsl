- name: Ensure test distributions exist
  vanduc2514.wsl_automation.wsl_instance:
    distribution: "{{ item.name }}"
    rootfs_path: "{{ item.rootfs_path | default(omit) }}"
    import_bundle: "{{ item.import_bundle | default(omit) }}"
    rootfs_download_checksum: "{{ item.rootfs_download_checksum | default(omit) }}"
    rootfs_download_checksum_algorithm: "{{ item.rootfs_download_checksum_algorithm | default(omit) }}"
  loop: "{{ test_distributions }}"

- name: Ensure systemd is enabled in test distributions
  vanduc2514.wsl_automation.wsl_file:
    distribution: "{{ item.name }}"
    content: |
      [boot]
      systemd=true
    owner: root
    path: /etc/wsl.conf
  loop: "{{ test_distributions }}"

- name: Create dummy service in test distributions
  vanduc2514.wsl_automation.wsl_file:
    distribution: "{{ item.name }}"
    content: |
      [Unit]
      Description=Dummy Service for Testing
      After=network.target

      [Service]
      Type=simple
      ExecStart=/bin/sh -c 'sleep infinity'
      Restart=on-failure

      [Install]
      WantedBy=multi-user.target
    owner: root
    path: /etc/systemd/system/dummy.service
  loop: "{{ test_distributions }}"

# Test WSL Systemd with multiple distributions
- name: Test WSL Systemd scenarios
  block:
    - name: Run minimum scenario
      ansible.builtin.include_tasks:
        file: minimum.yml
      vars:
        wsl_distribution: "{{ item.name }}"
      loop: "{{ test_distributions }}"

    - name: Run standard scenario
      ansible.builtin.include_tasks:
        file: standard.yml
      vars:
        wsl_distribution: "{{ item.name }}"
      loop: "{{ test_distributions }}"

  rescue:
    - name: Debug actual output if any test failed
      ansible.builtin.debug:
        msg: "{{ wsl_systemd_actual }}"
