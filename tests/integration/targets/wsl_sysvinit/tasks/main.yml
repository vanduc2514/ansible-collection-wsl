- name: Ensure test distributions exist
  vanduc2514.wsl_automation.wsl_instance:
    name: Ubuntu-20.04
    rootfs_path: "{{ item.rootfs_path | default(omit) }}"
    import_bundle: "{{ item.import_bundle | default(omit) }}"
    rootfs_download_checksum: "{{ item.rootfs_download_checksum | default(omit) }}"
    rootfs_download_checksum_algorithm: "{{ item.rootfs_download_checksum_algorithm | default(omit) }}"

- name: Ensure systemd is disabled in test distributions
  vanduc2514.wsl_automation.wsl_file:
    distribution: Ubuntu-20.04
    content: |
      [boot]
      systemd=false
    owner: root
    path: /etc/wsl.conf

- name: Ensure /etc/init.d directory exists in test distributions
  vanduc2514.wsl_automation.wsl_file:
    distribution: Ubuntu-20.04
    state: directory
    owner: root
    mode: '0755'
    path: /etc/init.d

- name: Create dummy service in test distributions
  vanduc2514.wsl_automation.wsl_file:
    distribution: Ubuntu-20.04
    content: |
      #!/bin/sh
      case "$1" in
        start)
          echo $! > /var/run/dummy.pid
          ;;
        stop)
          rm -f /var/run/dummy.pid
          ;;
        status)
          if [ -f /var/run/dummy.pid ]; then
            echo "running"
          else
            echo "stopped"
          fi
          ;;
      esac
    owner: root
    mode: '0755'
    path: /etc/init.d/dummy

# Test WSL SysVinit with multiple distributions
- name: Test WSL SysVinit scenarios
  block:
    - name: Run minimum scenario
      ansible.builtin.include_tasks:
        file: minimum.yml
      vars:
        wsl_distribution: Ubuntu-20.04

    - name: Run standard scenario
      ansible.builtin.include_tasks:
        file: standard.yml
      vars:
        wsl_distribution: Ubuntu-20.04

  rescue:
    - name: Debug actual output if any test failed
      ansible.builtin.debug:
        msg: "{{ wsl_sysvinit_actual }}"
