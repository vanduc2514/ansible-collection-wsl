- name: Converge
  hosts: windows
  gather_facts: true
  vars:
    sshd_port: 2222
    forward_port: 3333
    distribution: Ubuntu-22.04

  pre_tasks:
    - name: Create temporary directory for host keys
      ansible.windows.win_powershell:
        script: |
          $keyDir = "$env:TEMP\ssh_host_keys"
          if (!(Test-Path $keyDir)) {
              New-Item -ItemType Directory -Path $keyDir | Out-Null
          }

    - name: Generate RSA host key
      ansible.windows.win_powershell:
        script: |
          ssh-keygen -t rsa -b 4096 -f "$env:TEMP\ssh_host_keys\ssh_host_rsa_key" -N '""'
      register: rsa_key

    - name: Generate ECDSA host key
      ansible.windows.win_powershell:
        script: |
          ssh-keygen -t ecdsa -b 521 -f "$env:TEMP\ssh_host_keys\ssh_host_ecdsa_key" -N '""'
      register: ecdsa_key

    - name: Generate ED25519 host key
      ansible.windows.win_powershell:
        script: |
          ssh-keygen -t ed25519 -f "$env:TEMP\ssh_host_keys\ssh_host_ed25519_key" -N '""'
      register: ed25519_key

    - name: Read RSA private key
      ansible.windows.win_shell: Get-Content "$env:TEMP\ssh_host_keys\ssh_host_rsa_key"
      register: rsa_private

    - name: Read ECDSA private key
      ansible.windows.win_shell: Get-Content "$env:TEMP\ssh_host_keys\ssh_host_ecdsa_key"
      register: ecdsa_private

    - name: Read ED25519 private key
      ansible.windows.win_shell: Get-Content "$env:TEMP\ssh_host_keys\ssh_host_ed25519_key"
      register: ed25519_private

    - name: Read RSA public key
      ansible.windows.win_shell: Get-Content "$env:TEMP\ssh_host_keys\ssh_host_rsa_key.pub"
      register: rsa_public

    - name: Read ECDSA public key
      ansible.windows.win_shell: Get-Content "$env:TEMP\ssh_host_keys\ssh_host_ecdsa_key.pub"
      register: ecdsa_public

    - name: Read ED25519 public key
      ansible.windows.win_shell: Get-Content "$env:TEMP\ssh_host_keys\ssh_host_ed25519_key.pub"
      register: ed25519_public

    - name: Set host keys facts
      ansible.builtin.set_fact:
        host_keys_private:
          rsa: "{{ rsa_private.stdout_lines | join('\n') }}"
          ecdsa: "{{ ecdsa_private.stdout_lines | join('\n') }}"
          ed25519: "{{ ed25519_private.stdout_lines | join('\n') }}"
        host_keys_public:
          rsa: "{{ rsa_public.stdout_lines[0] }}"
          ecdsa: "{{ ecdsa_public.stdout_lines[0] }}"
          ed25519: "{{ ed25519_public.stdout_lines[0] }}"

  roles:
    - role: vanduc2514.wsl_automation.wsl_sshd
      vars:
        wsl_sshd_distribution_name: "{{ distribution }}"
        wsl_sshd_port: "{{ sshd_port }}"
        wsl_sshd_listen_address: "0.0.0.0"
        wsl_sshd_permit_root_login: "no"
        wsl_sshd_password_authentication: "no"
        wsl_sshd_pubkey_authentication: "yes"
        wsl_sshd_host_keys_private: "{{ host_keys_private }}"
        wsl_sshd_host_keys_public: "{{ host_keys_public }}"
        wsl_sshd_extra_configs:
          MaxAuthTries: "3"
          LoginGraceTime: "60"
          ClientAliveInterval: "300"
          ClientAliveCountMax: "3"
        wsl_sshd_port_forward_enabled: true
        wsl_sshd_port_forward_host_port: "{{ forward_port }}"
        wsl_sshd_port_forward_firewall_rule_name: "WSL SSH Test"
