---
- name: Verify
  hosts: windows
  gather_facts: false
  vars:
    test_user: ansible
    sshd_port: 2222
    forward_port: 3333
    distribution: Ubuntu-22.04
    firewall_rule_name: WSL SSH Test

  tasks:
    # Verify port forwarding and firewall
    - name: Check port forwarding configuration
      ansible.windows.win_shell: netsh interface portproxy show v4tov4
      register: portproxy_config

    - name: Set port forwarding pattern
      ansible.builtin.set_fact:
        port_forward_pattern: "[0-9.]+\\s+{{ forward_port }}\\s+[0-9.]+\\s+{{ sshd_port }}"

    - name: Verify port forwarding
      ansible.builtin.assert:
        that:
          - portproxy_config.stdout is search(port_forward_pattern)
        fail_msg: "Port forwarding is not configured correctly"
        success_msg: "Port forwarding is correctly configured"

    - name: Check firewall rule
      ansible.windows.win_shell: Get-NetFirewallRule -DisplayName "{{ firewall_rule_name }}" | Get-NetFirewallPortFilter | Select-Object Protocol,LocalPort | Format-List
      register: firewall_rule

    - name: Set expected firewall rule name
      ansible.builtin.set_fact:
        expected_rule_name: "{{ firewall_rule_name }}"

    - name: Verify firewall rule
      ansible.builtin.assert:
        that:
          - firewall_rule.stdout is search('Protocol\s*:\s*TCP')
          - firewall_rule.stdout is search('LocalPort\s*:\s*' ~ forward_port)
        fail_msg: |
          Firewall rule is not configured correctly. Current configuration:
          {{ firewall_rule.stdout }}
        success_msg: "Firewall rule is correctly configured"

    # Verify SSH connectivity from controller
    - name: Wait for port to be available
      ansible.windows.win_wait_for:
        port: "{{ forward_port }}"
        timeout: 30

    - name: Test SSH connection from controller
      ansible.builtin.shell: |
        ssh -i ~/.ssh/id_ed25519 \
            -p {{ forward_port }} \
            -o "ConnectTimeout=10" \
            -o "StrictHostKeyChecking=no" \
            {{ test_user }}@{{ ansible_host }} \
            "echo 'SSH connection successful'"
      register: ssh_test
      delegate_to: localhost
      failed_when: "'SSH connection successful' not in ssh_test.stdout"
      args:
        executable: /bin/bash

