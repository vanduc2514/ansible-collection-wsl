- name: Ensure WSL distribution state
  vanduc2514.wsl_automation.wsl_instance:
    distribution: "{{ wsl_distribution_name }}"
    web_download: "{{ wsl_distribution_install_web_download }}"
    rootfs_path: "{{ wsl_distribution_import_rootfs_path | default(omit) }}"
    rootfs_download_path: "{{ wsl_distribution_import_rootfs_download_path | default(omit) }}"
    rootfs_download_checksum: "{{ wsl_distribution_import_rootfs_download_checksum | default(omit) }}"
    rootfs_download_checksum_algorithm: "{{ wsl_distribution_import_rootfs_download_checksum_algorithm | default(omit) }}"
    import_dir_path: "{{ wsl_distribution_import_dir_path | default(omit) }}"
    import_bundle: "{{ wsl_distribution_import_bundle }}"
    import_vhd: "{{ wsl_distribution_import_vhd }}"
    arch_version: "{{ wsl_distribution_arch_version }}"
    state: "{{ wsl_distribution_state }}"

- name: Manage default user
  vanduc2514.wsl_automation.wsl_user:
    distribution: "{{ wsl_distribution_name }}"
    name: "{{ wsl_distribution_config_user_default }}"
    uid: "{{ wsl_distribution_config_user_default_uid | default(omit) }}"
    home_path: "{{ wsl_distribution_config_user_default_home_path | default(omit) }}"
    login_shell: "{{ wsl_distribution_config_user_default_login_shell }}"
    sudo: "{{ wsl_distribution_config_user_default_sudo }}"
    password: "{{ wsl_distribution_config_user_default_password | default(omit) }}"
    state: present
  register: wsl_distribution_default_user
  when:
    - wsl_distribution_state != "absent"
    - wsl_distribution_config_user_default is defined
    - wsl_distribution_config_user_default | length > 0

- name: Create .ssh directory for default user
  vanduc2514.wsl_automation.wsl_file:
    distribution: "{{ wsl_distribution_name }}"
    path: "/home/{{ wsl_distribution_config_user_default }}/.ssh"
    state: directory
    owner: "{{ wsl_distribution_config_user_default }}"
    mode: '700'
  when:
    - wsl_distribution_state != "absent"
    - wsl_distribution_config_user_default != "root"
    - wsl_distribution_config_user_default_authorized_keys | length > 0

- name: Configure authorized keys for default user
  vanduc2514.wsl_automation.wsl_file:
    distribution: "{{ wsl_distribution_name }}"
    path: "/home/{{ wsl_distribution_config_user_default }}/.ssh/authorized_keys"
    content: "{{ wsl_distribution_config_user_default_authorized_keys | join('\n') }}"
    owner: "{{ wsl_distribution_config_user_default }}"
    mode: '600'
  when:
    - wsl_distribution_state != "absent"
    - wsl_distribution_config_user_default != "root"
    - wsl_distribution_config_user_default_authorized_keys | length > 0

- name: Create wsl.conf configuration file with template
  vanduc2514.wsl_automation.wsl_file:
    distribution: "{{ wsl_distribution_name }}"
    path: /etc/wsl.conf
    content: "{{ lookup('ansible.builtin.template', 'wsl.conf.j2') }}"
    state: file
    mode: '644'
  register: wsl_distribution_wsl_conf
  when: wsl_distribution_state != "absent"

- name: Restart WSL distribution
  when:
    - (wsl_distribution_default_user is defined and wsl_distribution_default_user.changed) or
      (wsl_distribution_wsl_conf is defined and wsl_distribution_wsl_conf.changed)
    - wsl_distribution_state == "run"
  block:
    - name: (Restart) Stop wsl distribution
      vanduc2514.wsl_automation.wsl_instance:
        distribution: "{{ wsl_distribution_name }}"
        state: stop

    - name: (Restart) Run wsl distribution
      vanduc2514.wsl_automation.wsl_instance:
        distribution: "{{ wsl_distribution_name }}"
        state: run

    - name: Set ansible fact
      ansible.builtin.set_fact:
        wsl_distribution_restarted: true
