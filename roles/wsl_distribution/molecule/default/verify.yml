- name: Verify
  hosts: windows
  gather_facts: false
  vars:
    test_user_name: ubuntu
    test_password: TestP@ssW_rd

  pre_tasks:
    - name: Set password for test user
      vanduc2514.wsl_automation.wsl_user:
        distribution: Ubuntu-22.04
        name: "{{ test_user_name }}"
        password: "{{ test_password }}"
        sudo: true

  tasks:
    - name: Check WSL distribution exists
      ansible.windows.win_shell: wsl.exe -l -v
      register: wsl_list
      changed_when: false

    - name: Normalize WSL output
      ansible.builtin.set_fact:
        normalized_wsl_output: "{{ wsl_list.stdout | replace('\u0000', '') }}"

    - name: Verify Ubuntu-22.04 is installed
      ansible.builtin.assert:
        that:
          - "'Ubuntu-22.04' in normalized_wsl_output"
          - "'Running' in normalized_wsl_output"
        fail_msg: "Ubuntu-22.04 distribution is not installed or not running"
        success_msg: "Ubuntu-22.04 distribution is successfully installed and running"

    - name: Verify WSL configuration file exists
      ansible.windows.win_shell: wsl.exe -d Ubuntu-22.04 -u root -- cat /etc/wsl.conf
      register: wsl_conf_result
      changed_when: false

    - name: Normalize WSL config output
      ansible.builtin.set_fact:
        normalized_wsl_conf: "{{ wsl_conf_result.stdout | replace('\u0000', '') }}"

    - name: Verify standard configuration sections
      ansible.builtin.assert:
        that:
          - "'[automount]' in normalized_wsl_conf"
          - "'enabled = true' in normalized_wsl_conf"
          - "'mountFsTab = true' in normalized_wsl_conf"
          - "'root = /mnt/' in normalized_wsl_conf"
          - "'options = metadata,uid=1000,gid=1000' in normalized_wsl_conf"

          - "'[boot]' in normalized_wsl_conf"
          - "'systemd = true' in normalized_wsl_conf"

          - "'[interop]' in normalized_wsl_conf"
          - "'enabled = true' in normalized_wsl_conf"
          - "'appendWindowsPath = true' in normalized_wsl_conf"

          - "'[user]' in normalized_wsl_conf"
          - "'default = ubuntu' in normalized_wsl_conf"
        fail_msg: "Standard WSL configuration sections not found or incorrect"
        success_msg: "Standard WSL configuration sections are correctly set"

    - name: Verify extra configuration sections
      ansible.builtin.assert:
        that:
          - "'[custom_section]' in normalized_wsl_conf"
          - "'property1 = value1' in normalized_wsl_conf"
          - "'property2 = 123' in normalized_wsl_conf"

          - "'[another_section]' in normalized_wsl_conf"
          - "'setting = true' in normalized_wsl_conf"
        fail_msg: "Extra configuration sections not found or incorrect"
        success_msg: "Extra configuration sections are correctly set"

    - name: Verify default user exists
      ansible.windows.win_shell: wsl.exe -d Ubuntu-22.04 -- id "{{ test_user_name }}"
      register: user_result
      changed_when: false

    - name: Normalize user check output
      ansible.builtin.set_fact:
        normalized_user_result: "{{ user_result.stdout | replace('\u0000', '') }}"

    - name: Verify default user is properly configured
      ansible.builtin.assert:
        that:
          - "'uid=' in normalized_user_result"
        fail_msg: "Default user 'ubuntu' is not properly configured"
        success_msg: "Default user 'ubuntu' is properly configured"

    - name: Get default user details
      ansible.windows.win_shell: wsl.exe -d Ubuntu-22.04 -- getent passwd {{ test_user_name }}
      register: user_details
      changed_when: false

    - name: Normalize user details output
      ansible.builtin.set_fact:
        normalized_user_details: "{{ user_details.stdout | replace('\u0000', '') }}"

    - name: Verify default user configuration
      ansible.builtin.assert:
        that:
          - "normalized_user_details is regex('ubuntu:x:\\d+:\\d+:.*:/home/ubuntu:/bin/bash')"
        fail_msg: "Default user 'ubuntu' configuration is incorrect"
        success_msg: "Default user 'ubuntu' configuration is correct"

    - name: Check if default user has sudo privileges with password
      ansible.windows.win_shell: |
        echo '{{ test_password }}' | wsl.exe -d Ubuntu-22.04 -u {{ test_user_name }} -- sudo -S cat /etc/shadow
      register: sudo_check
      changed_when: false

    - name: Verify default user sudo privileges
      ansible.builtin.assert:
        that:
          - sudo_check.rc == 0
        fail_msg: "Default user 'ubuntu' does not have proper sudo privileges"
        success_msg: "Default user 'ubuntu' has proper sudo privileges"

    - name: Check if sudo privileges requires password
      ansible.windows.win_shell: wsl.exe -d Ubuntu-22.04 -u {{ test_user_name }} -- sudo -S cat /etc/shadow
      register: sudo_check_empty_password
      changed_when: false
      ignore_errors: true

    - name: Verify default user sudo privileges
      ansible.builtin.assert:
        that:
          - sudo_check_empty_password.rc == 1
        fail_msg: "sudo privileges without password"
        success_msg: "sudo privileges requires password"
